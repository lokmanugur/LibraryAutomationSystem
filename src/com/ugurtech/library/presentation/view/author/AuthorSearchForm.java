package com.ugurtech.library.presentation.view.author;

import com.ugurtech.library.application.lib.validation.UserInfoMessages;
import com.ugurtech.library.application.lib.writetofile.TableToExcelImpl;
import com.ugurtech.library.presentation.controller.Initialize;
import com.ugurtech.library.presentation.controller.author.AuthorController;
import com.ugurtech.library.presentation.view.main.MainForm;
/**
 *
 * @author lokman uğur
 * 
 */
public final class AuthorSearchForm extends AuthorController implements Initialize {

    private static AuthorSearchForm authorSearchForm;
    
    private AuthorSearchForm() {
        initComponents();
        initView();
        initController();
        setLocation(getWidth()/10,getHeight()/10);
    }

    public static AuthorSearchForm getInstance(){
        if(authorSearchForm == null)
            return authorSearchForm = new AuthorSearchForm();
        else
            return authorSearchForm;
    }


 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelToolBar = new javax.swing.JPanel();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonWriteFile = new javax.swing.JButton();
        textFieldSearch = new javax.swing.JTextField();
        labelSearch = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        authorTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Yazarlar Bilgi Ayrıntı Tablosu");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        buttonUpdate.setText("Update");

        buttonDelete.setText("Delete");

        buttonWriteFile.setText("Write to Excel");

        labelSearch.setText("Search");

        buttonAdd.setText("Add");

        javax.swing.GroupLayout panelToolBarLayout = new javax.swing.GroupLayout(panelToolBar);
        panelToolBar.setLayout(panelToolBarLayout);
        panelToolBarLayout.setHorizontalGroup(
            panelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToolBarLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonWriteFile)
                .addGap(99, 99, 99))
        );
        panelToolBarLayout.setVerticalGroup(
            panelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToolBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelToolBarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonWriteFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        authorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane1.setViewportView(authorTable);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
    );

    getAccessibleContext().setAccessibleName("Menu Hareket");

    pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable authorTable;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonWriteFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JPanel panelToolBar;
    private javax.swing.JTextField textFieldSearch;
    // End of variables declaration//GEN-END:variables

    private void search() {
        authorTable.setModel(search(textFieldSearch.getText()));
    }

    private void delete() {
        if (authorTable.getSelectedRow() == -1) {
            UserInfoMessages.getInstance().showInfoMessages(setLanguage("table.delete.unselectedrow"));
        } else if (UserInfoMessages.getInstance().showApproveMessages(setLanguage("table.option.approve"), setLanguage("table.option.approve.form.title"))) {
            delete((int) authorTable.getModel().getValueAt(authorTable.getSelectedRow(), 0));
        }
    }

    private void update() {
        if (authorTable.getSelectedRow() == -1) {
            UserInfoMessages.getInstance().showInfoMessages(setLanguage("table.update.unselectedrow"));
        } else {
            authorModel = get((int) authorTable.getModel().getValueAt(authorTable.getSelectedRow(), 0));
            AuthorForm authorForm = AuthorForm.getInstance();
            MainForm.INSTANCE.addDesktopPane(authorForm);
            authorForm.setAuthorModel(authorModel);
            authorForm.modelToForm();
        }
    }

    @Override
    public void initView() {
        setLanguage();
        search();
    }

    @Override
    public void initController() {
        buttonUpdate.addActionListener((java.awt.event.ActionEvent evt) -> {
            this.update();
        });

        buttonDelete.addActionListener((java.awt.event.ActionEvent evt) -> {
            delete();
            search();
        });

        buttonAdd.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(AuthorForm.getInstance());
        });

        buttonWriteFile.addActionListener((java.awt.event.ActionEvent evt) -> {
            writeExel();
        });

        textFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search();
            }
        });
    }

    private void setLanguage() {
        setTitle(setLanguage("authorsearchform.title"));
        labelSearch.setText(setLanguage("authorsearchform.paneltoolbar.labelsearch"));
        buttonAdd.setText(setLanguage("authorsearchform.paneltoolbar.buttonadd"));
        buttonDelete.setText(setLanguage("authorsearchform.paneltoolbar.buttondelete"));
        buttonUpdate.setText(setLanguage("authorsearchform.paneltoolbar.buttonupdate"));
        buttonWriteFile.setText(setLanguage("authorsearchform.paneltoolbar.buttonwritefile"));
    }

    private void writeExel() {
        new TableToExcelImpl(authorTable, setLanguage("authorsearchform.title")).writeToTable();
    }

}
