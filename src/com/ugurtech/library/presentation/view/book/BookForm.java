/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ugurtech.library.presentation.view.book;

import com.toedter.calendar.JDateChooser;
import com.ugurtech.library.model.AuthorModel;
import com.ugurtech.library.model.BookModel;
import com.ugurtech.library.model.BookTypeModel;
import com.ugurtech.library.model.CurrentUserModel;
import com.ugurtech.library.model.PublisherModel;
import com.ugurtech.library.presentation.controller.Initialize;
import com.ugurtech.library.presentation.controller.book.BookController;
import com.ugurtech.library.presentation.view.author.AuthorForm;
import com.ugurtech.library.presentation.view.booktype.BookTypeForm;
import com.ugurtech.library.presentation.view.main.MainForm;
import com.ugurtech.library.presentation.view.publisher.PublisherForm;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import javax.swing.DefaultListModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ugur
 *
 */
public final class BookForm extends BookController implements Initialize {

    public static final BookForm INSTANCE = new BookForm();
    private final DefaultListModel bookTypeDefaultListModel;
    private final DefaultListModel authorDefaultListModel;

    private BookForm() {
        initComponents();
        initView();
        initController();
        bookTypeDefaultListModel = new DefaultListModel();
        authorDefaultListModel = new DefaultListModel();
        bookTypeList.setModel(bookTypeDefaultListModel);
        authorList.setModel(authorDefaultListModel);
        setLocation(getWidth() / 2, getHeight() / 100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        panelButtons = new javax.swing.JPanel();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        layeredPaneBook = new javax.swing.JLayeredPane();
        panelAuthor = new javax.swing.JPanel();
        scrollPaneAuthor = new javax.swing.JScrollPane();
        authorList = new javax.swing.JList<>();
        labelAuthorList = new javax.swing.JLabel();
        labelSelectAuthor = new javax.swing.JLabel();
        authorComboBox = new javax.swing.JComboBox<>();
        authorButton = new javax.swing.JButton();
        authorRemoveButton = new javax.swing.JButton();
        authorAddButton = new javax.swing.JButton();
        panelBookType = new javax.swing.JPanel();
        booksTypeComboBox = new javax.swing.JComboBox<>();
        labelSelectBookType = new javax.swing.JLabel();
        typeButton = new javax.swing.JButton();
        scrollPaneBookType = new javax.swing.JScrollPane();
        bookTypeList = new javax.swing.JList<>();
        labelBookTypeList = new javax.swing.JLabel();
        booksTypeAddButton = new javax.swing.JButton();
        booksTypeRemoveButton = new javax.swing.JButton();
        panelBook = new javax.swing.JPanel();
        labelIsbn = new javax.swing.JLabel();
        labelBookName = new javax.swing.JLabel();
        bookNameTextField = new javax.swing.JTextField();
        publisherComboBox = new javax.swing.JComboBox<>();
        labelPublisher = new javax.swing.JLabel();
        labelPressDate = new javax.swing.JLabel();
        publisherButton = new javax.swing.JButton();
        labelBookQuantity = new javax.swing.JLabel();
        pressDateChooser = new JDateChooser();
        textFieldBookShelf = new javax.swing.JTextField();
        labelBookShelf = new javax.swing.JLabel();
        textFieldIsbn = new javax.swing.JFormattedTextField();
        textFieldBookCount = new javax.swing.JFormattedTextField();
        textFieldPageNumber = new javax.swing.JFormattedTextField();
        labelBookPageNumber = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Kitap Kayıt Formu");
        setMinimumSize(new java.awt.Dimension(100, 100));

        mainPanel.setBorder(null);
        mainPanel.setMinimumSize(new java.awt.Dimension(100, 100));

        panelButtons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelButtons.setPreferredSize(new java.awt.Dimension(470, 42));

        buttonSave.setText("Kaydet");

        buttonCancel.setText("İptal Et");

        javax.swing.GroupLayout panelButtonsLayout = new javax.swing.GroupLayout(panelButtons);
        panelButtons.setLayout(panelButtonsLayout);
        panelButtonsLayout.setHorizontalGroup(
            panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonsLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        panelButtonsLayout.setVerticalGroup(
            panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonsLayout.createSequentialGroup()
                .addGroup(panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layeredPaneBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        layeredPaneBook.setPreferredSize(new java.awt.Dimension(480, 270));

        panelAuthor.setBorder(null);

        scrollPaneAuthor.setViewportView(authorList);

        labelAuthorList.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelAuthorList.setText("Yazarlar:");

        labelSelectAuthor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSelectAuthor.setText("Yazar Ekle:");

        authorComboBox.setEditable(true);

        authorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/poem.png"))); // NOI18N

        authorRemoveButton.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        authorRemoveButton.setText("-");
        authorRemoveButton.setPreferredSize(new java.awt.Dimension(40, 40));

        authorAddButton.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        authorAddButton.setText("+");

        javax.swing.GroupLayout panelAuthorLayout = new javax.swing.GroupLayout(panelAuthor);
        panelAuthor.setLayout(panelAuthorLayout);
        panelAuthorLayout.setHorizontalGroup(
            panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAuthorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAuthorList, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSelectAuthor, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPaneAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(authorRemoveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorAddButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelAuthorLayout.setVerticalGroup(
            panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAuthorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelAuthorLayout.createSequentialGroup()
                        .addComponent(authorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(authorRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPaneAuthor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAuthorList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelSelectAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(authorAddButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBookType.setBorder(null);

        booksTypeComboBox.setEditable(true);

        labelSelectBookType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSelectBookType.setText("Kitap Türü Ekle:");

        typeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/separation.png"))); // NOI18N

        scrollPaneBookType.setViewportView(bookTypeList);

        labelBookTypeList.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelBookTypeList.setText("Kitap Türü:");

        booksTypeAddButton.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        booksTypeAddButton.setText("+");

        booksTypeRemoveButton.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        booksTypeRemoveButton.setText("-");

        javax.swing.GroupLayout panelBookTypeLayout = new javax.swing.GroupLayout(panelBookType);
        panelBookType.setLayout(panelBookTypeLayout);
        panelBookTypeLayout.setHorizontalGroup(
            panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBookTypeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelSelectBookType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelBookTypeList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPaneBookType, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksTypeAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksTypeRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelBookTypeLayout.setVerticalGroup(
            panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBookTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBookTypeLayout.createSequentialGroup()
                        .addComponent(typeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(booksTypeRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPaneBookType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBookTypeList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBookTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(booksTypeAddButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSelectBookType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBook.setBorder(null);
        panelBook.setVerifyInputWhenFocusTarget(false);

        labelIsbn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIsbn.setText("ISBN:");

        labelBookName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelBookName.setText("Kitap Adı:");

        publisherComboBox.setEditable(true);
        publisherComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelPublisher.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPublisher.setText("Yayın Evi:");

        labelPressDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPressDate.setText("Basım Tarihi:");

        publisherButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/advertisement.png"))); // NOI18N

        labelBookQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelBookQuantity.setText("Sayı");

        labelBookShelf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelBookShelf.setText("Book Shelf:");

        textFieldIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        textFieldBookCount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        textFieldPageNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        labelBookPageNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelBookPageNumber.setText("Page Number");

        javax.swing.GroupLayout panelBookLayout = new javax.swing.GroupLayout(panelBook);
        panelBook.setLayout(panelBookLayout);
        panelBookLayout.setHorizontalGroup(
            panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBookLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBookLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(labelBookShelf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelBookPageNumber)
                        .addComponent(labelBookName)
                        .addComponent(labelIsbn)
                        .addComponent(labelPublisher)
                        .addComponent(labelPressDate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBookLayout.createSequentialGroup()
                        .addComponent(publisherComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(publisherButton, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                    .addComponent(bookNameTextField)
                    .addComponent(textFieldIsbn)
                    .addComponent(pressDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelBookLayout.createSequentialGroup()
                        .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textFieldPageNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(textFieldBookShelf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelBookQuantity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldBookCount, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBookLayout.setVerticalGroup(
            panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(publisherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(publisherComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBookLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(labelPressDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBookLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pressDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldPageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBookPageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldBookCount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelBookQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldBookShelf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBookShelf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layeredPaneBook.setLayer(panelAuthor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPaneBook.setLayer(panelBookType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPaneBook.setLayer(panelBook, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredPaneBookLayout = new javax.swing.GroupLayout(layeredPaneBook);
        layeredPaneBook.setLayout(layeredPaneBookLayout);
        layeredPaneBookLayout.setHorizontalGroup(
            layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBookType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layeredPaneBookLayout.setVerticalGroup(
            layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBookType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layeredPaneBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneBookLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(layeredPaneBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelButtons, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(layeredPaneBook, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        getAccessibleContext().setAccessibleName("Book Save Form");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton authorAddButton;
    private javax.swing.JButton authorButton;
    private javax.swing.JComboBox<AuthorModel> authorComboBox;
    private javax.swing.JList<AuthorModel> authorList;
    private javax.swing.JButton authorRemoveButton;
    private javax.swing.JTextField bookNameTextField;
    private javax.swing.JList<BookTypeModel> bookTypeList;
    private javax.swing.JButton booksTypeAddButton;
    private javax.swing.JComboBox<BookTypeModel> booksTypeComboBox;
    private javax.swing.JButton booksTypeRemoveButton;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JLabel labelAuthorList;
    private javax.swing.JLabel labelBookName;
    private javax.swing.JLabel labelBookPageNumber;
    private javax.swing.JLabel labelBookQuantity;
    private javax.swing.JLabel labelBookShelf;
    private javax.swing.JLabel labelBookTypeList;
    private javax.swing.JLabel labelIsbn;
    private javax.swing.JLabel labelPressDate;
    private javax.swing.JLabel labelPublisher;
    private javax.swing.JLabel labelSelectAuthor;
    private javax.swing.JLabel labelSelectBookType;
    private javax.swing.JLayeredPane layeredPaneBook;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelAuthor;
    private javax.swing.JPanel panelBook;
    private javax.swing.JPanel panelBookType;
    private javax.swing.JPanel panelButtons;
    private com.toedter.calendar.JDateChooser pressDateChooser;
    private javax.swing.JButton publisherButton;
    private javax.swing.JComboBox<PublisherModel> publisherComboBox;
    private javax.swing.JScrollPane scrollPaneAuthor;
    private javax.swing.JScrollPane scrollPaneBookType;
    private javax.swing.JFormattedTextField textFieldBookCount;
    private javax.swing.JTextField textFieldBookShelf;
    private javax.swing.JFormattedTextField textFieldIsbn;
    private javax.swing.JFormattedTextField textFieldPageNumber;
    private javax.swing.JButton typeButton;
    // End of variables declaration//GEN-END:variables

    
    private int layerPaneCount = 1;
    @Override
    public void initView() {
        AutoCompleteDecorator.decorate(booksTypeComboBox);
        AutoCompleteDecorator.decorate(authorComboBox);
        AutoCompleteDecorator.decorate(publisherComboBox);
        setLanguage();
        layerPane(layerPaneCount);
    }

    @Override
    public void initController() {

        authorComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            @Override
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                getAllAuthor();
            }
        });

        authorButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(AuthorForm.INSTANCE);
        });

        authorRemoveButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            removeItemFromAuthorList();
        });

        authorAddButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            addItemToAuthorList();
        });

        booksTypeComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            @Override
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                getAllBookType();
            }
        });

        booksTypeComboBox.getEditor().getEditorComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == 10) {
                    addItmeToBookTypeList();
                }
            }
        });
        authorComboBox.getEditor().getEditorComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == 10) {
                    addItemToAuthorList();
                }
            }
        });

        typeButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(BookTypeForm.INSTANCE);
        });

        bookTypeList.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    evt.consume();
                    removeItemFromBookTypeList();
                }
            }

        });
        authorList.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    evt.consume();
                    removeItemFromAuthorList();
                }
            }

        });

        booksTypeAddButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            addItmeToBookTypeList();
        });

        booksTypeRemoveButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            removeItemFromBookTypeList();
        });

        publisherComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            @Override
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                
            }

            @Override
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                getAllPublisher();
            }
        });

        publisherButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(PublisherForm.INSTANCE);
        });

        buttonCancel.addActionListener((java.awt.event.ActionEvent evt) -> {
            if (buttonCancel.getText().equals(setLanguage("form.button.cancel"))) {
                layerPaneCount = 1;
                layerPane(layerPaneCount);
                bookModel=null;
                clearAllFields();
                this.dispose();
            } else {
                layerPane(--layerPaneCount);
            }
        });

        buttonSave.addActionListener((java.awt.event.ActionEvent evt) -> {
            if (buttonSave.getText().equals(setLanguage("form.button.save"))) {
                if(Objects.isNull(bookModel)){
                    add(formToModel(new BookModel()));
                    clearAllFields();
                    search();
                }else{
                    update(formToModel(bookModel));
                    clearAllFields();
                    search();
                    bookModel=null;
                }
                layerPaneCount = 1;
                layerPane(layerPaneCount);
                clearAllFields();
            } else {
                layerPane(++layerPaneCount);
            }

        });
    }

    public void getAllPublisher() {
        publisherComboBox.removeAllItems();
        publisherService.getAll().forEach(publisherModel -> publisherComboBox.addItem(publisherModel));
    }

    public void getAllAuthor() {
        authorComboBox.removeAllItems();
        authorService.getAll().forEach(authorModel -> authorComboBox.addItem(authorModel));
    }

    public void getAllBookType() {
        booksTypeComboBox.removeAllItems();
        bookTypeService.getAll().forEach(bookTypeModel -> booksTypeComboBox.addItem(bookTypeModel));
    }

    public void clearAllFields() {
        authorDefaultListModel.removeAllElements();
        bookTypeDefaultListModel.removeAllElements();
        authorList.removeAll();
        bookTypeList.removeAll();
        authorComboBox.removeAllItems();
        publisherComboBox.removeAllItems();
        booksTypeComboBox.removeAllItems();
        bookNameTextField.setText(null);
        textFieldIsbn.setText(null);
        pressDateChooser.setDate(null);
        textFieldBookShelf.setText("");
        textFieldBookCount.setText("");
        textFieldPageNumber.setText("");
    }
    
    public void clearAll(){
        authorList.removeAll();
        bookTypeList.removeAll();
    }

    private void setLanguage() {
        setTitle(setLanguage("bookform.title"));
        buttonSave.setText(setLanguage("form.button.save"));
        buttonCancel.setText(setLanguage("form.button.cancel"));
        labelIsbn.setText(setLanguage("bookform.layeredpanebook.panelbook.labelisbn"));
        labelBookName.setText(setLanguage("bookform.layeredpanebook.panelbook.labelbookname"));
        labelPublisher.setText(setLanguage("bookform.layeredpanebook.panelbook.labelpublisher"));
        labelPressDate.setText(setLanguage("bookform.layeredpanebook.panelbook.labelpressdate"));
        labelBookQuantity.setText(setLanguage("bookform.layeredpanebook.panelbook.labelbookquantity"));
        labelBookShelf.setText(setLanguage("bookform.layeredpanebook.panelbook.labelbookshelf"));
        labelBookPageNumber.setText(setLanguage("bookform.layeredpanebook.panelbook.labelpages"));
        labelAuthorList.setText(setLanguage("bookform.layeredpanebook.panelauthor.labelauthorlist"));
        labelSelectAuthor.setText(setLanguage("bookform.layeredpanebook.panelauthor.labelselectauthor"));
        labelSelectBookType.setText(setLanguage("bookform.layeredpanebook.panelbooktype.labelselectbooktype"));
        labelBookTypeList.setText(setLanguage("bookform.layeredpanebook.panelbooktype.labelbooktypelist"));
        
        panelBook.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Book Details"));
        panelBookType.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Book Types"));
        panelAuthor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Book Authors"));
    }

    private void layerPane(int count) {
        switch (countPane(count)) {
            case 1:
                panelBook.setVisible(true);
                panelAuthor.setVisible(false);
                panelBookType.setVisible(false);
                buttonSave.setText(setLanguage("bookform.mainpanel.panelbuttons.next"));
                buttonCancel.setText(setLanguage("form.button.cancel"));
                break;
            case 2:
                panelBook.setVisible(false);
                panelAuthor.setVisible(true);
                panelBookType.setVisible(false);
                buttonSave.setText(setLanguage("bookform.mainpanel.panelbuttons.next"));
                buttonCancel.setText(setLanguage("bookform.mainpanel.panelbuttons.back"));
                break;
            case 3:
                panelBook.setVisible(false);
                panelAuthor.setVisible(false);
                panelBookType.setVisible(true);
                buttonSave.setText(setLanguage("form.button.save"));
                buttonCancel.setText(setLanguage("bookform.mainpanel.panelbuttons.back"));
                break;
            default:
                panelBook.setVisible(true);
                panelAuthor.setVisible(false);
                panelBookType.setVisible(false);
                buttonSave.setText(setLanguage("bookform.mainpanel.panelbuttons.next"));
                buttonCancel.setText(setLanguage("form.button.cancel"));
        }
    }

    private int countPane(int count) {
        if (count > 3 || count < 1) {
            count = 1;
        }
        return count;
    }

    private void addItmeToBookTypeList() {
        bookTypeDefaultListModel.addElement(booksTypeComboBox.getSelectedItem());
    }

    private void addItemToAuthorList() {
        authorDefaultListModel.addElement(authorComboBox.getSelectedItem());
    }

    private void removeItemFromAuthorList() {
        if (authorList.isSelectionEmpty()) {

        } else {
            authorDefaultListModel.remove(authorList.getSelectedIndex());
        }
    }
    private void removeItemFromBookTypeList() {
        if (bookTypeList.isSelectionEmpty()) {
            
        } else {
            bookTypeDefaultListModel.remove(bookTypeList.getSelectedIndex());
        }
    }

    public void modelToForm(BookModel bookModel) {
        textFieldIsbn.setText(String.valueOf(bookModel.getIsbn()));
        bookNameTextField.setText(bookModel.getBookName());
        pressDateChooser.setDate(new Date(bookModel.getPressDate()));
        publisherComboBox.addItem(bookModel.getPublisherModel());
        textFieldPageNumber.setText(String.valueOf(bookModel.getPageNumbber()));
        textFieldBookCount.setText(String.valueOf(bookModel.getQuantity()));
        textFieldBookShelf.setText(bookModel.getShelf());
        bookModel.getBookType().forEach(btm ->bookTypeDefaultListModel.addElement(btm));
        bookModel.getAuthor().forEach(am->authorDefaultListModel.addElement(am));
        this.bookModel = bookModel;
    }
    
    public BookModel formToModel(BookModel bookModel){
        this.bookModel = new BookModel();
        List<AuthorModel> authorList = new ArrayList<>();
        List<BookTypeModel> bookTypeList = new ArrayList<>();
        bookModel.setBookId(bookModel==null?0:bookModel.getBookId());
        bookModel.setIsbn(Long.parseLong(textFieldIsbn.getText()));
        bookModel.setSysuserId(CurrentUserModel.INSTANCE.getSysUserId());
        bookModel.setBookName(bookNameTextField.getText());
        bookModel.setPressDate(pressDateChooser.getDate() == null ? 0 : pressDateChooser.getDate().getTime());
        bookModel.setPageNumbber(Integer.parseInt(textFieldPageNumber.getText()));
        bookModel.setQuantity(Integer.parseInt(textFieldBookCount.getText()));
        bookModel.setStock(Integer.parseInt(textFieldBookCount.getText()));
        bookModel.setShelf(textFieldBookShelf.getText());

        for (int i = 0; i < bookTypeDefaultListModel.getSize(); i++) {
            bookTypeList.add((BookTypeModel) bookTypeDefaultListModel.getElementAt(i));
        }

        for (int i = 0; i < authorDefaultListModel.getSize(); i++) {
            authorList.add((AuthorModel) authorDefaultListModel.getElementAt(i));
        }

        bookModel.setBooksType(bookTypeList);
        bookModel.setAuthor(authorList);
        bookModel.setPublisherModel((PublisherModel) publisherComboBox.getSelectedItem());
        return bookModel;
    }
    
    private void search(){
        BookSearchForm.INSTANCE.search();
    }

    @Override
    public void doDefaultCloseAction() {
        clearAllFields();
        super.doDefaultCloseAction(); 
    }
    
    
}
