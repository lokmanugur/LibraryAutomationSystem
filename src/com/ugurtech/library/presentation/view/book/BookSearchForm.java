package com.ugurtech.library.presentation.view.book;

import com.ugurtech.library.presentation.controller.Initialize;
import com.ugurtech.library.presentation.controller.book.BookController;
import com.ugurtech.library.presentation.view.borrow.StartBorrowForm;
import com.ugurtech.library.presentation.view.main.MainForm;
import java.util.Vector;
/**
 *
 * @author lokman uÄŸur
 * 
 */
public final class BookSearchForm extends BookController implements Initialize {

    public static BookSearchForm INSTANCE = new BookSearchForm();
    private BookSearchForm() {
        initComponents();
        initView();
        initController();
        setLocation(getWidth()/10,getHeight()/10);
    }

 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        dateChooserFirst = new com.toedter.calendar.JDateChooser();
        dateChooserLast = new com.toedter.calendar.JDateChooser();
        comboBoxDate = new javax.swing.JComboBox<>();
        labelColumn = new javax.swing.JLabel();
        labelStart = new javax.swing.JLabel();
        labelEnd = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelSearch = new javax.swing.JLabel();
        textFieldSearch = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonWriteFile = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        buttonBorrow = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Books Detail Table");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(booksTable);

        labelColumn.setText("Column");

        labelStart.setText("Start Date");

        labelEnd.setText("End Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelColumn)
                .addGap(5, 5, 5)
                .addComponent(comboBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(labelStart)
                .addGap(3, 3, 3)
                .addComponent(dateChooserFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(labelEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateChooserLast, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelStart, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateChooserLast, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooserFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        labelSearch.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSearch.setText("Search");
        labelSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        buttonAdd.setText("Add");
        buttonAdd.setMaximumSize(new java.awt.Dimension(240, 105));
        buttonAdd.setPreferredSize(new java.awt.Dimension(80, 35));

        buttonUpdate.setText("Update");
        buttonUpdate.setMaximumSize(new java.awt.Dimension(240, 105));
        buttonUpdate.setPreferredSize(new java.awt.Dimension(100, 35));

        buttonDelete.setText("Delete");
        buttonDelete.setMaximumSize(new java.awt.Dimension(240, 105));
        buttonDelete.setPreferredSize(new java.awt.Dimension(80, 35));

        buttonWriteFile.setText("Write Excel");
        buttonWriteFile.setMaximumSize(new java.awt.Dimension(240, 105));
        buttonWriteFile.setPreferredSize(new java.awt.Dimension(100, 35));

        buttonSearch.setText("Search");

        buttonBorrow.setText("Add Basket");
        buttonBorrow.setMaximumSize(new java.awt.Dimension(150, 35));
        buttonBorrow.setMinimumSize(new java.awt.Dimension(90, 35));
        buttonBorrow.setPreferredSize(new java.awt.Dimension(110, 35));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(buttonBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonWriteFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonWriteFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Menu Hareket");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable booksTable;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonBorrow;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonWriteFile;
    private javax.swing.JComboBox<String> comboBoxDate;
    private com.toedter.calendar.JDateChooser dateChooserFirst;
    private com.toedter.calendar.JDateChooser dateChooserLast;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelColumn;
    private javax.swing.JLabel labelEnd;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JLabel labelStart;
    private javax.swing.JTextField textFieldSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initView() {
        setLanguage();
        search();
    }

    @Override
    public void initController() {
        textFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search();
            }
        });

        buttonWriteFile.addActionListener((java.awt.event.ActionEvent evt) -> {
            write();
        });

        buttonDelete.addActionListener((java.awt.event.ActionEvent evt) -> {
            delete();
        });

        buttonUpdate.addActionListener((java.awt.event.ActionEvent evt) -> {
            update();
        });

        buttonAdd.addActionListener((java.awt.event.ActionEvent evt) -> {
            add();
        });
        buttonSearch.addActionListener((java.awt.event.ActionEvent evt) -> {
            search();
        });
        buttonBorrow.addActionListener((java.awt.event.ActionEvent evt) -> {
            addBasket();
        });
    }

    protected void add() {
        MainForm.INSTANCE.addDesktopPane(BookForm.getInstance());
    }

    protected void update() {
        if (updateUnSelectRowMessage(booksTable.getSelectedRow())) {
            BookForm bookForm = BookForm.getInstance();
            MainForm.INSTANCE.addDesktopPane(bookForm);
            bookModel=get((Integer) (booksTable.getModel().getValueAt(booksTable.getSelectedRow(), 0)));
            bookForm.modelToForm();
        }
    }

    protected void delete() {
        if (deleteApproveMessage(booksTable.getSelectedRow())) {
            delete((Integer) (booksTable.getModel().getValueAt(booksTable.getSelectedRow(), 0)));
        }
        search();
    }

    public void search() {
        booksTable.setModel(
                search(textFieldSearch.getText(),
                        comboBoxDate.getSelectedIndex(),
                        dateChooserFirst.getDate() == null ? 0 : dateChooserFirst.getDate().getTime(),
                        dateChooserLast.getDate() == null ? 0 : dateChooserLast.getDate().getTime()));
    }

    private void fillDateColumnToSelectionComboBox() {
        comboBoxDate.removeAll();
        comboBoxDate.addItem("");
        comboBoxDate.addItem(setLanguage("book.publishdate"));
        comboBoxDate.addItem(setLanguage("book.lastupdate"));
    }

    private void write() {
        write(booksTable, getTitle());
    }

    private void setLanguage() {
        fillDateColumnToSelectionComboBox();
        labelColumn.setText(setLanguage("table.label.column"));
        labelStart.setText(setLanguage("table.begin.date"));
        labelEnd.setText(setLanguage("table.end.date"));
        labelSearch.setText(setLanguage("table.search"));
        buttonAdd.setText(setLanguage("table.button.add"));
        buttonBorrow.setText(setLanguage("book.search.form.button.add.basket"));
        buttonDelete.setText(setLanguage("table.button.delete"));
        buttonSearch.setText(setLanguage("table.search"));
        buttonUpdate.setText(setLanguage("table.button.update"));
        buttonWriteFile.setText(setLanguage("table.button.write.excel"));
        
    }
    
        private void addBasket() {
            int selectedRow =booksTable.getSelectedRow();
        if(unSelectRowMessage(selectedRow)){
            startBorrowForm().addHashMap(
                (long)booksTable.getValueAt(booksTable.getSelectedRow(), 1),
                addVector(), 
                (int) booksTable.getValueAt(booksTable.getSelectedRow(), 8));
        }
    }

    private StartBorrowForm startBorrowForm() {
        StartBorrowForm startBorrowForm = StartBorrowForm.INSTANCE;
        if (!startBorrowForm.isVisible()) {
            MainForm.INSTANCE.addDesktopPane(startBorrowForm);
            startBorrowForm.setVisible(false);
        }
        return startBorrowForm;
    }

    private Vector<Object> addVector() {
        Vector<Object> dataList = new Vector<>();
        dataList.add(booksTable.getValueAt(booksTable.getSelectedRow(), 0));
        dataList.add(booksTable.getValueAt(booksTable.getSelectedRow(), 1));
        dataList.add(booksTable.getValueAt(booksTable.getSelectedRow(), 2));
        dataList.add(1);
        return dataList;
    }
    
}
