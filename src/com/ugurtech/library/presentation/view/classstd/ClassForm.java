/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ugurtech.library.presentation.view.classstd;
import com.ugurtech.library.application.lib.validation.UserInfoMessages;
import com.ugurtech.library.model.ClassModel;
import com.ugurtech.library.presentation.controller.Initialize;
import com.ugurtech.library.presentation.controller.classstd.ClassController;

/**
 *
 * @author ugur
 */
public final class ClassForm extends ClassController implements Initialize {

    public static final ClassForm INSTANCE = new ClassForm();
    
    private ClassForm() {
        initComponents();
        initView();
        initController();
        setLocation(getWidth()/2, getHeight()/10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldClassName = new javax.swing.JTextField();
        labelClassName = new javax.swing.JLabel();
        buttonCancel = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName(""); // NOI18N
        setVisible(true);

        textFieldClassName.setPreferredSize(new java.awt.Dimension(200, 35));

        labelClassName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelClassName.setText("Sınıf Adı:");
        labelClassName.setPreferredSize(new java.awt.Dimension(75, 35));

        buttonCancel.setText("Cancel");
        buttonCancel.setPreferredSize(new java.awt.Dimension(80, 35));

        buttonSave.setText("Save");
        buttonSave.setPreferredSize(new java.awt.Dimension(80, 35));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelClassName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(73, 73, 73)
                        .addComponent(buttonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JLabel labelClassName;
    private javax.swing.JTextField textFieldClassName;
    // End of variables declaration//GEN-END:variables

private void setLanguage() {
        setTitle(setLanguage("classform.title"));
        labelClassName.setText(setLanguage("classform.label.name"));
        buttonCancel.setText(setLanguage("form.button.cancel"));
        buttonSave.setText(setLanguage("form.button.save"));
    }

    private void add() {
        add(formToModel());
        ClassSearchForm.INSTANCE.initView();
    }

    @Override
    public void initView() {
        setLanguage();
    }

    @Override
    public void initController() {
        buttonSave.addActionListener(((e) -> {
            if (classModel != null) {
                updete();
                classModel=null;
                clearFields();
            } else {
                add();
                clearFields();
            }
        }));
        buttonCancel.addActionListener(((e) -> {
            classModel=null;
            clearFields();
            this.dispose();
        }));
    }

    private void updete() {
        update(formToModel());
        ClassSearchForm.INSTANCE.initView();
    }

    private ClassModel formToModel() {
        ClassModel cm = null;
        if (textFieldClassName.getText().equals("")) {
            UserInfoMessages.getInstance().showInfoMessages(setLanguage("classform.classname.empty"));
        } else {
            cm = new ClassModel();
            cm.setClassId(classModel==null?0:classModel.getClassId());
            cm.setClassName(textFieldClassName.getText());
        }
        return cm;
    }

    public void modelToForm() {
        textFieldClassName.setText(classModel.getClssName());
    }

    public void clearFields() {
        textFieldClassName.setText("");
    }
    

    @Override
    public void doDefaultCloseAction() {
        clearFields();
        super.doDefaultCloseAction();
    }
    
}
