/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ugurtech.library.presentation.view.user;
import com.ugurtech.library.model.PersonModel;
import com.ugurtech.library.model.UserModel;
import com.ugurtech.library.model.responsmodels.CountryModel;
import com.ugurtech.library.model.responsmodels.LanguageModel;
import com.ugurtech.library.model.responsmodels.UserTypeModel;
import com.ugurtech.library.presentation.controller.Initialize;
import com.ugurtech.library.presentation.controller.user.UserController;
import com.ugurtech.library.presentation.view.main.MainForm;
import com.ugurtech.library.presentation.view.person.PersonForm;
import com.ugurtech.library.presentation.view.usertype.UserTypeForm;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Objects;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author lokman uÄŸur
 */
public final class UserForm extends UserController implements Initialize {

    public static UserForm INSTANCE = new UserForm();       
    private UserForm() {
        initComponents();
        AutoCompleteDecorator.decorate(comboBoxUser);
        AutoCompleteDecorator.decorate(comboBoxUserType);
        AutoCompleteDecorator.decorate(comboBoxCountry);
        AutoCompleteDecorator.decorate(comboBoxLanguage);
        initView();
        initController();
        setLocation(getWidth()/2,getHeight()/10);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addUserPanel = new javax.swing.JPanel();
        labelPassword = new javax.swing.JLabel();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        labelRepeatPassword = new javax.swing.JLabel();
        labelUserName = new javax.swing.JLabel();
        textFieldUserName = new javax.swing.JTextField();
        textFieldPassword = new javax.swing.JPasswordField();
        textFieldRepeatPassword = new javax.swing.JPasswordField();
        labelInformUser = new javax.swing.JLabel();
        comboBoxUser = new javax.swing.JComboBox<>();
        labelUser = new javax.swing.JLabel();
        comboBoxUserType = new javax.swing.JComboBox<>();
        labelUserType = new javax.swing.JLabel();
        buttonAddUser = new javax.swing.JButton();
        comboBoxCountry = new javax.swing.JComboBox<>();
        comboBoxLanguage = new javax.swing.JComboBox<>();
        textFieldSession = new javax.swing.JTextField();
        labelCountry = new javax.swing.JLabel();
        labelLanguage = new javax.swing.JLabel();
        labelSessionTime = new javax.swing.JLabel();
        labelMinute = new javax.swing.JLabel();
        buttonAddUserType = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("User Add Form");

        labelPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPassword.setText("Password");

        buttonSave.setText("Save");

        buttonCancel.setText("Cancel");

        labelRepeatPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelRepeatPassword.setText("Repeat Password");

        labelUserName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUserName.setText("User Name:");

        labelInformUser.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelInformUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        comboBoxUser.setEditable(true);
        comboBoxUser.setToolTipText("");

        labelUser.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUser.setText("User:");

        comboBoxUserType.setEditable(true);

        labelUserType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUserType.setText("User Type:");

        buttonAddUser.setText("+");

        labelCountry.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCountry.setText("Country:");

        labelLanguage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelLanguage.setText("Language:");

        labelSessionTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSessionTime.setText("Logout Time");

        labelMinute.setText("Minute");

        buttonAddUserType.setText("+");

        javax.swing.GroupLayout addUserPanelLayout = new javax.swing.GroupLayout(addUserPanel);
        addUserPanel.setLayout(addUserPanelLayout);
        addUserPanelLayout.setHorizontalGroup(
            addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(labelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelUserType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelUserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelRepeatPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelCountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelLanguage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSessionTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addUserPanelLayout.createSequentialGroup()
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelInformUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldUserName)
                    .addComponent(textFieldPassword)
                    .addComponent(textFieldRepeatPassword)
                    .addGroup(addUserPanelLayout.createSequentialGroup()
                        .addComponent(textFieldSession, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboBoxCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxLanguage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addUserPanelLayout.createSequentialGroup()
                        .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboBoxUserType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxUser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAddUserType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        addUserPanelLayout.setVerticalGroup(
            addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSession, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSessionTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRepeatPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldRepeatPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(labelInformUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addUserPanel;
    private javax.swing.JButton buttonAddUser;
    private javax.swing.JButton buttonAddUserType;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<CountryModel> comboBoxCountry;
    private javax.swing.JComboBox<LanguageModel> comboBoxLanguage;
    private javax.swing.JComboBox<PersonModel> comboBoxUser;
    private javax.swing.JComboBox<UserTypeModel> comboBoxUserType;
    private javax.swing.JLabel labelCountry;
    private javax.swing.JLabel labelInformUser;
    private javax.swing.JLabel labelLanguage;
    private javax.swing.JLabel labelMinute;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelRepeatPassword;
    private javax.swing.JLabel labelSessionTime;
    private javax.swing.JLabel labelUser;
    private javax.swing.JLabel labelUserName;
    private javax.swing.JLabel labelUserType;
    private javax.swing.JPasswordField textFieldPassword;
    private javax.swing.JPasswordField textFieldRepeatPassword;
    private javax.swing.JTextField textFieldSession;
    private javax.swing.JTextField textFieldUserName;
    // End of variables declaration//GEN-END:variables
 @Override
    public void initView() {
        setLanguage();
        fillAllUserTypeToComboBox();
        fillAllCountryToComboBox();
        fillAllLanguageToComboBox();
        fillAllPersonToComboBox();
    }

    private void fillAllLanguageToComboBox() {
        languageService.getAll().forEach(languageModel -> {
            comboBoxLanguage.addItem(languageModel);
        });
    }

    private void fillAllPersonToComboBox() {
        personService.getAll().forEach(personModel -> {
            comboBoxUser.addItem(personModel);
        });
    }

    private void fillAllCountryToComboBox() {
        countryService.getAll().forEach(countryModel -> {
            comboBoxCountry.addItem(countryModel);
        });
    }

    private void fillAllUserTypeToComboBox() {
        userTypeService.getAll().forEach(userTypeModel -> {
            comboBoxUserType.addItem(userTypeModel);
        });
    }

    @Override
    public void initController() {
        buttonSave.addActionListener((java.awt.event.ActionEvent evt) -> {
            save();
        });

        buttonCancel.addActionListener((java.awt.event.ActionEvent evt) -> {
            cancel();
        });
        buttonAddUser.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(PersonForm.INSTANCE);
        });
        buttonAddUserType.addActionListener((java.awt.event.ActionEvent evt) -> {
            MainForm.INSTANCE.addDesktopPane(UserTypeForm.INSTANCE);
        });

        textFieldPassword.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (!String.valueOf(textFieldRepeatPassword.getPassword()).equals("")) {
                    checkPassword();
                }
            }
        });

        textFieldRepeatPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkPassword();
            }
        });

        comboBoxUser.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            @Override
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                comboBoxUser.removeAllItems();
                fillAllPersonToComboBox();
            }
        });

        comboBoxUserType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            @Override
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            @Override
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                comboBoxUserType.removeAllItems();
                fillAllUserTypeToComboBox();
            }
        });

        comboBoxUser.getEditor().getEditorComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //personComboBoxKeyReleased(evt);
            }
        });
        comboBoxUserType.getEditor().getEditorComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //userTypeComboBoxKeyReleased(evt);
            }
        });
    }

    private void save() {
        if (checkFields()) {
            if (Objects.isNull(userModel)) {
                add(formToModel(new UserModel()));
            } else {
                update(formToModel(userModel));
                dispose();
            }
            clearTextField();
            UserSearchForm.INSTANCE.search();
        }
    }

    private void cancel() {
        dispose();
        clearTextField();
    }

    public void clearTextField() {
        comboBoxUser.setSelectedItem(null);
        comboBoxUserType.setSelectedItem(null);
        comboBoxCountry.setSelectedItem(null);
        comboBoxLanguage.setSelectedItem(null);
        textFieldUserName.setText(null);
        textFieldSession.setText(null);
        textFieldPassword.setText(null);
        textFieldRepeatPassword.setText(null);
        labelInformUser.setText(null);
        userModel = null;
    }

    public void checkPassword() {
        boolean check = String.valueOf(textFieldPassword.getPassword()).equals(String.valueOf(textFieldRepeatPassword.getPassword()));
        if (check) {
            labelInformUser.setForeground(Color.BLACK);
            labelInformUser.setText(setLanguage("userformcontroller.password.match"));
            buttonSave.setEnabled(true);
        } else {
            labelInformUser.setForeground(Color.RED);
            labelInformUser.setText(setLanguage("userformcontroller.password.dont.match"));
            buttonSave.setEnabled(false);
        }
    }

    private boolean checkFields() {
        return comboBoxUserType.getSelectedItem() != null && comboBoxUser.getSelectedItem() != null
                && textFieldPassword.getPassword() != null && textFieldUserName.getText() != null;
    }

    public UserModel formToModel(UserModel userModel) {
        userModel.setCountryModel((CountryModel) comboBoxCountry.getSelectedItem());
        userModel.setLanguageModel((LanguageModel) comboBoxLanguage.getSelectedItem());
        userModel.setUserTypeModel((UserTypeModel) comboBoxUserType.getSelectedItem());
        userModel.setPersonModel((PersonModel) comboBoxUser.getSelectedItem());
        userModel.setUserName(textFieldUserName.getText());
        userModel.setUserPassword(String.copyValueOf(textFieldPassword.getPassword()));
        userModel.setSessionTime(Integer.parseInt(textFieldSession.getText()));
        return userModel;
    }

    public void modelToForm(UserModel userModel) {
        comboBoxUserType.setSelectedItem(userModel.getUserTypeModel());
        comboBoxUser.setSelectedItem(userModel.getPersonModel());
        comboBoxCountry.setSelectedItem(userModel.getCountryModel());
        comboBoxLanguage.setSelectedItem(userModel.getLanguageModel());
        textFieldPassword.setText(userModel.getUserPassword());
        textFieldSession.setText(String.valueOf(userModel.getSessionTime()));
        textFieldUserName.setText(userModel.getUserName());
        this.userModel = userModel;
    }

    private void setLanguage() {
        setTitle(setLanguage("userform.title"));
        labelCountry.setText(setLanguage("userform.label.country"));
        labelLanguage.setText(setLanguage("userform.label.language"));
        labelPassword.setText(setLanguage("userform.label.password"));
        labelRepeatPassword.setText(setLanguage("userform.label.repeatpassword"));
        labelSessionTime.setText(setLanguage("userform.label.sessiontime"));
        labelUser.setText(setLanguage("userform.label.user"));
        labelUserName.setText(setLanguage("userform.label.username"));
        labelUserType.setText(setLanguage("userform.label.usertype"));
        labelMinute.setText(setLanguage("userform.label.minute"));
        buttonSave.setText(setLanguage("form.button.save"));
        buttonCancel.setText(setLanguage("form.button.cancel")); 
    }

    @Override
    public void doDefaultCloseAction() {
        clearTextField();
        super.doDefaultCloseAction();
    }
    
    
}
